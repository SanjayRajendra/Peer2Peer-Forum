--------------------------sample JSONs for subjects, tags-----------------------------------------------------------------------------
This has to be inserted for backend to work
db.globaltrends.find().pretty()
{
        "_id" : 1,
        "subject" : {
                "Data Structures" : 10,
                "Algorithms" : 26,
                "Compiler Design" : 30,
                "Theory Of Computation" : 100,
                "Machine Learning" : 2
        },
        "tag" : {
                "Linked List" : 25,
                "Hash Maps" : 30,
                "Binary Trees" : 50,
                "Neural Networks" : 6,
                "LL" : 1,
                "ML" : 1
        }
}


----------------------------------Sample JSONs for notes database--------------------------------------
'''

{
        "_id" : ObjectId("5bea537c655e4e02f016a317"),
        "upl_by" : "5be99c81655e4e46487ad3b2",
        "subject" : "Algorithms",
        "tag" : [
                "Neural Networks"
        ],
        "course" : 1,
        "upvotes" : 0,
        "downvotes" : 0,
        "title" : "ANN",
        "summary" : "xxxx",
        "link" : "2269947.pdf",
        "time" : ISODate("2018-11-13T10:00:52.908Z")
}
{
        "_id" : ObjectId("5bea53ae655e4e02f016a318"),
        "upl_by" : "5be99c81655e4e46487ad3b2",
        "subject" : "Algorithms",
        "tag" : [
                "Neural Networks"
        ],
        "course" : 1,
        "upvotes" : 0,
        "downvotes" : 0,
        "title" : "ANN",
        "summary" : "xxxx",
        "link" : "5625067.pdf",
        "time" : ISODate("2018-11-13T10:01:42.748Z")
}
{
        "_id" : ObjectId("5bea53fd655e4e02f016a319"),
        "upl_by" : "5be99c81655e4e46487ad3b2",
        "subject" : "Algorithms",
        "tag" : [
                "Neural Networks"
        ],
        "course" : 1,
        "upvotes" : 0,
        "downvotes" : 0,
        "title" : "ANN",
        "summary" : "xxxx",
        "link" : "6913322.pdf",
        "time" : ISODate("2018-11-13T10:03:01.865Z")
}
'''



--------------------------------Sample JSON for users db--------------------------------------------

{
        "_id" : ObjectId("5bd86111a5281b8f9f9c8b3f"),
        "email" : "swetha@gmail.com",
        "password" : "123",
        "name" : "swetha",
        "is_student" : 1,
        "ques_ask" : 20,
        "ques_ans" : 30,
        "ans_upvote" : 200,
        "proj_ideas" : 3, 
        "notes_upl" : 10,
        "view_notes" : 30,
	"score":1,
        "topSubjects" : {"Data Structures":10,  "Algorithms": 20, "Compiler Design" : 30, "Theory Of Computation" : 100},
        "topTags"  : {"Linked List" : 25, "Hash Maps": 30, "Binary Trees": 50} 
}
{
        "_id" : ObjectId("5bd8626a655e4e16b09ed781"),
        "name" : "mia",
        "password" : "123",
        "email" : "x@gmail.com",
        "is_student" : 1,
        "ques_ask" : 20,
        "ques_ans" : 30,
        "ans_upvote" : 200,
        "proj_ideas" : 3, 
        "notes_upl" : 10,
        "view_notes" : 30,
	"score":1,
        "topSubjects" : {"Data Structures":10,  "Algorithms": 20, "Compiler Design" : 30, "Theory Of Computation" : 100},
        "topTags"  : {"Linked List" : 25, "Hash Maps": 30, "Binary Trees": 50}

}
--------------------------Q and A---------------------------------------------------------
1) /qlist - get list of questions

[
    {
        "_id" : ObjectId("5bd86111a5281b8f9f9c8b3f"),
        "asked_by" : "5bea63a0655e4e03a02d0a0f",
        "tags": ["ML",  "BackProp"],
	"subject":"ML",
        "time" : ISODate("2018-10-12T17:47:57.933Z"),
        "description": "What is the complexity of reversing a linked list?",
        "title": "t1"
    },
    {
        "_id" : ObjectId("5bd86111a5281b8f9f9c8b3f"),
        "asked_by" : "234567890",
"subject":"ML",
        "tags": ["Linked List"],
        "time" : ISODate("2018-10-12T17:47:57.933Z"),
        "description": "descp2",
        "title": "t2"
    }
]

2) /q/QID/answers - get all answers to given question (QID is question ID)

[
    {
        "_id" : ObjectId("5bf0ed15655e4e100ce36f10"),
        "answered_by" : "5bea63a0655e4e03a02d0a0f",
        "content" : {
                "answer" : "hello"
        },
        "teacher" : 0,
        "time" : ISODate("2018-11-18T10:09:49.170Z"),
        "upvotes" : 1,
        "downvotes" : 0,
        "votes" : [
                "5bea63a0655e4e03a02d0a0f"
        ],
        "QID" : "5bf0d180655e4e227c1f72a4"
}
]

3) /q/AID/upvote - upvote an answer (AID is answer ID)

4) /q/AID/downvote - downvote an answer (AID is answer ID)

5) /q/QID/answer - add an answer to question QID by sending following JSON

{
    "answered_by" : "abcd@gmail.com",
    "content": "answer text"
}

6) /q/ask - add a question by sending following JSON

{
    "asked_by" : "xyz@gmail.com",
    "tags": ["tag1",  "tag2", "tag3"],
    "description": "descp2",
    "title": "t2"
}

-------------------------------------------------Notifications---------------------------------------
{
	"_id":"1433457",
	"userid":"1242654",
	"notif":[{"type":1,"id":"23134","msg":"the answer","qid":"123234"}
	...]
}
1- someone has answered your question
2-for student- peer wants to join- should be able to view his profile and accept 
3- for student- student accepted your request to join 
4-for student- mentor approved idea
5- for teacher- idea proposal - view idea and approve
6- owner invitation to colaborate